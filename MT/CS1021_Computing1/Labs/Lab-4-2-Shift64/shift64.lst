


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Shift64, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F0058        LDR              R0, =0x13131313 ; leastSignific
                                                            ant32
    7 00000004 E59F1054        LDR              R1, =0x13131313 ; mostSignifica
                                                            nt32 
    8 00000008 E59F2054        LDR              R2, =-2     ; shiftCount
    9 0000000C         
   10 0000000C E3520000        CMP              R2, #0      ;if(shiftCount < 0)
                                                            
   11 00000010 BA000009        BLT              leftShift   ; leftShift();
   12 00000014 CA000000        BGT              rightShift  ;else if(shiftCount
                                                             > 0)
   13 00000018         ;   rightShit()
   14 00000018 0A00000F        BEQ              stop
   15 0000001C         
   16 0000001C         rightShift                           ;rightShift(){
   17 0000001C E3520000        CMP              R2, #0      ;while(shiftCount >
                                                             0)
   18 00000020 DA00000D        BLE              stop        ;{
   19 00000024 E1A000A0        MOV              R0, R0, LSR #1 ;  leastSignific
                                                            ant32 >> 1
   20 00000028 E1B010A1        MOVS             R1, R1, LSR #1 ;  mostSignifica
                                                            nt32 >> 1, check ca
                                                            rry
   21 0000002C 3A000000        BCC              skip1       ;  if(carrySet){
   22 00000030 E2800102        ADD              R0, R0, #0x80000000 ;    leastS
                                                            ignificant32 += #0x
                                                            80000000
   23 00000034         skip1                                ;  }
   24 00000034 E2422001        SUB              R2, R2, #1  ;  shiftCount--
   25 00000038 EAFFFFF7        B                rightShift  ;}
   26 0000003C         
   27 0000003C         leftShift                            ;rightShift(){
   28 0000003C E3520000        CMP              R2, #0      ;while(shiftCount <
                                                             0)
   29 00000040 AA000005        BGE              stop        ;{
   30 00000044 E1A01081        MOV              R1, R1, LSL #1 ;  mostSignifica
                                                            nt32 >> 1
   31 00000048 E1B00080        MOVS             R0, R0, LSL #1 ;  leastSignific
                                                            ant32 >> 1, check c
                                                            arry
   32 0000004C 3A000000        BCC              skip2       ;  if(carrySet){
   33 00000050 E2811001        ADD              R1, R1, #0x00000001 ;    mostSi
                                                            gnificant32 += #0x8
                                                            0000000
   34 00000054         skip2                                ;  }
   35 00000054 E2822001        ADD              R2, R2, #1  ;  shiftCount++
   36 00000058 EAFFFFF7        B                leftShift   ;}
   37 0000005C         
   38 0000005C EAFFFFFE 
                       stop    B                stop
   39 00000060         
   40 00000060         
   41 00000060                 END
              13131313 



ARM Macro Assembler    Page 2 


              FFFFFFFE 
Command Line: --debug --xref --apcs=interwork --depend=.\shift64.d -o.\shift64.
o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips 
--predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLO
CK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA
 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\shift64.l
st Shift64.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Shift64 00000000

Symbol: Shift64
   Definitions
      At line 1 in file Shift64.s
   Uses
      None
Comment: Shift64 unused
leftShift 0000003C

Symbol: leftShift
   Definitions
      At line 27 in file Shift64.s
   Uses
      At line 11 in file Shift64.s
      At line 36 in file Shift64.s

rightShift 0000001C

Symbol: rightShift
   Definitions
      At line 16 in file Shift64.s
   Uses
      At line 12 in file Shift64.s
      At line 25 in file Shift64.s

skip1 00000034

Symbol: skip1
   Definitions
      At line 23 in file Shift64.s
   Uses
      At line 21 in file Shift64.s
Comment: skip1 used once
skip2 00000054

Symbol: skip2
   Definitions
      At line 34 in file Shift64.s
   Uses
      At line 32 in file Shift64.s
Comment: skip2 used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file Shift64.s
   Uses
      At line 3 in file Shift64.s
Comment: start used once
stop 0000005C

Symbol: stop
   Definitions
      At line 38 in file Shift64.s
   Uses
      At line 14 in file Shift64.s
      At line 18 in file Shift64.s
      At line 29 in file Shift64.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 38 in file Shift64.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Shift64.s
   Uses
      None
Comment: main unused
1 symbol
347 symbols in table
