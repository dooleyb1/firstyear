


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             StatEval, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getkey
    4 00000000                 IMPORT           sendchar
    5 00000000                 EXPORT           start
    6 00000000                 PRESERVE8
    7 00000000         
    8 00000000         start
    9 00000000         
   10 00000000 E3A0C000        LDR              R12, =0     ; dividend
   11 00000004 E3A0B000        LDR              R11, =0     ; mean
   12 00000008 E3A0A001        LDR              R10, =1     ; powerOf10
   13 0000000C E3A09000        LDR              R9, =0      ; maxNum
   14 00000010 E3E0800D        LDR              R8, =0xFFFFFFF2 ; minNum
   15 00000014 E3A07000        LDR              R7, =0      ; sumOfNumbers
   16 00000018 E3A0600A        LDR              R6, =10     ; number10
   17 0000001C E3A05000        LDR              R5, =0      ; count
   18 00000020 E3A04000        LDR              R4, =0      ; runningTotal --> 
                                                            range
   19 00000024         
   20 00000024         
   21 00000024         positiveRead
   22 00000024 EBFFFFFE        BL               getkey      ; read key from con
                                                            sole
   23 00000028 E350000D        CMP              R0, #0x0D   ; while (key != RET
                                                            URN)
   24 0000002C 0A000006        BEQ              positiveInput ; {
   25 00000030 E3500020        CMP              R0, #0x20   ; && while (key != 
                                                            SPACE)
   26 00000034 0A000004        BEQ              positiveInput ; 
   27 00000038 EBFFFFFE        BL               sendchar    ; echo key back to 
                                                            console
   28 0000003C         
   29 0000003C E0040496        MUL              R4, R6, R4  ; runningTotal * 10
                                                            
   30 00000040 E2400030        SUB              R0, R0, #0x30 ; converting key 
                                                            to decimal
   31 00000044 E0804004        ADD              R4, R0, R4  ; key + runningTota
                                                            l
   32 00000048 EAFFFFF5        B                positiveRead ; }
   33 0000004C         
   34 0000004C         
   35 0000004C         positiveInput
   36 0000004C E350000D        CMP              R0, #0x0D
   37 00000050 1A00002C        BNE              posContinue
   38 00000054 E3540000        CMP              R4, #0x00
   39 00000058 1A00002A        BNE              posContinue
   40 0000005C         
   41 0000005C         ; // Prints error message to console 
   42 0000005C         ; // if there is no input from user
   43 0000005C         
   44 0000005C E3A00045        LDR              R0, ='E'
   45 00000060 EBFFFFFE        BL               sendchar
   46 00000064 E3A00072        LDR              R0, ='r'
   47 00000068 EBFFFFFE        BL               sendchar
   48 0000006C E3A00072        LDR              R0, ='r'
   49 00000070 EBFFFFFE        BL               sendchar
   50 00000074 E3A0006F        LDR              R0, ='o'
   51 00000078 EBFFFFFE        BL               sendchar



ARM Macro Assembler    Page 2 


   52 0000007C E3A00072        LDR              R0, ='r'
   53 00000080 EBFFFFFE        BL               sendchar
   54 00000084 E3A0002C        LDR              R0, =','
   55 00000088 EBFFFFFE        BL               sendchar
   56 0000008C E3A00020        LDR              R0, =' '
   57 00000090 EBFFFFFE        BL               sendchar
   58 00000094 E3A00049        LDR              R0, ='I'
   59 00000098 EBFFFFFE        BL               sendchar
   60 0000009C E3A0006E        LDR              R0, ='n'
   61 000000A0 EBFFFFFE        BL               sendchar
   62 000000A4 E3A00076        LDR              R0, ='v'
   63 000000A8 EBFFFFFE        BL               sendchar
   64 000000AC E3A00061        LDR              R0, ='a'
   65 000000B0 EBFFFFFE        BL               sendchar
   66 000000B4 E3A0006C        LDR              R0, ='l'
   67 000000B8 EBFFFFFE        BL               sendchar
   68 000000BC E3A00069        LDR              R0, ='i'
   69 000000C0 EBFFFFFE        BL               sendchar
   70 000000C4 E3A00064        LDR              R0, ='d'
   71 000000C8 EBFFFFFE        BL               sendchar
   72 000000CC E3A00020        LDR              R0, =' '
   73 000000D0 EBFFFFFE        BL               sendchar
   74 000000D4 E3A00049        LDR              R0, ='I'
   75 000000D8 EBFFFFFE        BL               sendchar
   76 000000DC E3A0006E        LDR              R0, ='n'
   77 000000E0 EBFFFFFE        BL               sendchar
   78 000000E4 E3A00070        LDR              R0, ='p'
   79 000000E8 EBFFFFFE        BL               sendchar
   80 000000EC E3A00075        LDR              R0, ='u'
   81 000000F0 EBFFFFFE        BL               sendchar
   82 000000F4 E3A00074        LDR              R0, ='t'
   83 000000F8 EBFFFFFE        BL               sendchar
   84 000000FC E3A0002E        LDR              R0, ='.'
   85 00000100 EBFFFFFE        BL               sendchar
   86 00000104 EA000015        B                endRead
   87 00000108         
   88 00000108         posContinue
   89 00000108 EBFFFFFE        BL               sendchar    ; echo SPACE/ENTER 
                                                            key back to console
                                                            
   90 0000010C E2855001        ADD              R5, R5, #0x1 ; count++
   91 00000110 E0847007        ADD              R7, R4, R7  ; sum = sum + runni
                                                            ngTotal
   92 00000114         
   93 00000114         minMaxCheck
   94 00000114 E1540009        CMP              R4, R9      ; if (R4 >= maxNum)
                                                            
   95 00000118 BA000000        BLT              checkmin    ; {
   96 0000011C E1A09004        MOV              R9, R4      ;  set maxNum to R4
                                                            
   97 00000120         
   98 00000120         checkmin
   99 00000120 E1540008        CMP              R4, R8      ; else if (R4 <= mi
                                                            nNum)
  100 00000124 8A000000        BHI              endMinMax   ; {  
  101 00000128 E1A08004        MOV              R8, R4      ;  set minNum to R4
                                                            
  102 0000012C         ; }
  103 0000012C         endMinMax



ARM Macro Assembler    Page 3 


  104 0000012C E3A04000        LDR              R4, =0      ;   ; reset R4 =0
  105 00000130 E350000D        CMP              R0, #0x0D   ; if (key = RETURN)
                                                            
  106 00000134 0A000000        BEQ              meanCompute ; { meanCompute }
  107 00000138         ; else
  108 00000138 EAFFFFB9        B                positiveRead ; (read again)
  109 0000013C         
  110 0000013C         meanCompute
  111 0000013C E1A0C007        MOV              R12, R7     ; dividend == sumOf
                                                            Numbers
  112 00000140 E3550000        CMP              R5, #0      ; if ( count != 0)
  113 00000144 0A000004        BEQ              rangeCalc   ; {
  114 00000148         
  115 00000148         meanWhile
  116 00000148 E15C0005        CMP              R12, R5     ;  while(dividend >
                                                            = count)
  117 0000014C BA000002        BLT              rangeCalc   ;  {
  118 00000150 E28BB001        ADD              R11, R11, #1 
                                                            ;   mean = mean + 1
                                                            
  119 00000154 E04CC005        SUB              R12, R12, R5 ;   dividend = div
                                                            idend - count (divi
                                                            sor)
  120 00000158 EAFFFFFA        B                meanWhile   ; }
  121 0000015C         
  122 0000015C         rangeCalc
  123 0000015C E0494008        SUB              R4, R9, R8  ; Range = Max - Min
                                                                
  124 00000160         ; }
  125 00000160         endRead                              ;  endRead
  126 00000160         ; }
  127 00000160 EAFFFFFE 
                       stop    B                stop
  128 00000164         
  129 00000164                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\s
tateval.d -o.\stateval.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Inclu
de -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICR
OLIB SETA 1" --predefine="__UVISION_VERSION SETA 521" --predefine="NO_CLOCK_SET
UP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1" --
predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\stateval.lst St
atEval.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

StatEval 00000000

Symbol: StatEval
   Definitions
      At line 1 in file StatEval.s
   Uses
      None
Comment: StatEval unused
checkmin 00000120

Symbol: checkmin
   Definitions
      At line 98 in file StatEval.s
   Uses
      At line 95 in file StatEval.s
Comment: checkmin used once
endMinMax 0000012C

Symbol: endMinMax
   Definitions
      At line 103 in file StatEval.s
   Uses
      At line 100 in file StatEval.s
Comment: endMinMax used once
endRead 00000160

Symbol: endRead
   Definitions
      At line 125 in file StatEval.s
   Uses
      At line 86 in file StatEval.s
Comment: endRead used once
meanCompute 0000013C

Symbol: meanCompute
   Definitions
      At line 110 in file StatEval.s
   Uses
      At line 106 in file StatEval.s
Comment: meanCompute used once
meanWhile 00000148

Symbol: meanWhile
   Definitions
      At line 115 in file StatEval.s
   Uses
      At line 120 in file StatEval.s
Comment: meanWhile used once
minMaxCheck 00000114

Symbol: minMaxCheck
   Definitions
      At line 93 in file StatEval.s
   Uses
      None
Comment: minMaxCheck unused
posContinue 00000108

Symbol: posContinue



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 88 in file StatEval.s
   Uses
      At line 37 in file StatEval.s
      At line 39 in file StatEval.s

positiveInput 0000004C

Symbol: positiveInput
   Definitions
      At line 35 in file StatEval.s
   Uses
      At line 24 in file StatEval.s
      At line 26 in file StatEval.s

positiveRead 00000024

Symbol: positiveRead
   Definitions
      At line 21 in file StatEval.s
   Uses
      At line 32 in file StatEval.s
      At line 108 in file StatEval.s

rangeCalc 0000015C

Symbol: rangeCalc
   Definitions
      At line 122 in file StatEval.s
   Uses
      At line 113 in file StatEval.s
      At line 117 in file StatEval.s

start 00000000

Symbol: start
   Definitions
      At line 8 in file StatEval.s
   Uses
      At line 5 in file StatEval.s
Comment: start used once
stop 00000160

Symbol: stop
   Definitions
      At line 127 in file StatEval.s
   Uses
      At line 127 in file StatEval.s
Comment: stop used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getkey 00000000

Symbol: getkey
   Definitions
      At line 3 in file StatEval.s
   Uses
      At line 22 in file StatEval.s
Comment: getkey used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file StatEval.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 4 in file StatEval.s
   Uses
      At line 27 in file StatEval.s
      At line 45 in file StatEval.s
      At line 47 in file StatEval.s
      At line 49 in file StatEval.s
      At line 51 in file StatEval.s
      At line 53 in file StatEval.s
      At line 55 in file StatEval.s
      At line 57 in file StatEval.s
      At line 59 in file StatEval.s
      At line 61 in file StatEval.s
      At line 63 in file StatEval.s
      At line 65 in file StatEval.s
      At line 67 in file StatEval.s
      At line 69 in file StatEval.s
      At line 71 in file StatEval.s
      At line 73 in file StatEval.s
      At line 75 in file StatEval.s
      At line 77 in file StatEval.s
      At line 79 in file StatEval.s
      At line 81 in file StatEval.s
      At line 83 in file StatEval.s
      At line 85 in file StatEval.s
      At line 89 in file StatEval.s

3 symbols
354 symbols in table
