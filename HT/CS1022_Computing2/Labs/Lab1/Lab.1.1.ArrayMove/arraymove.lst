


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ArrayMove, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F0094        LDR              R0, =array
    7 00000004 E3A01009        LDR              R1, =N
    8 00000008 E3A02002        LDR              R2, =2      ; move from index
    9 0000000C E3A03006        LDR              R3, =6      ; move to index
   10 00000010 E3A05004        LDR              R5, =4      ; index offset
   11 00000014         
   12 00000014 E5904000        LDR              R4, [R0, #0] 
                                                            ;val = array[index]
                                                            
   13 00000018 E0050592        MUL              R5, R2, R5  ;index offset *= mo
                                                            ve from index * 4
   14 0000001C E7904005        LDR              R4, [R0, R5] 
                                                            ;val = array[index]
                                                            
   15 00000020 E1A09004        MOV              R9, R4      ;valToSwapIndex = v
                                                            al
   16 00000024         
   17 00000024 E1520003        CMP              R2, R3      ;if(fromIndex < toI
                                                            ndex)
   18 00000028 BA00000A        BLT              whLoopLeftShift
   19 0000002C         
   20 0000002C         whLoopRightShift
   21 0000002C E1520003        CMP              R2, R3      ;while(fromIndex >=
                                                             toIndex)
   22 00000030 9A000013        BLS              moveVal
   23 00000034 E59F0060        LDR              R0, =array
   24 00000038 E2455004        SUB              R5, R5, #4
   25 0000003C E7904005        LDR              R4, [R0, R5] 
                                                            ;val = array[index]
                                                            
   26 00000040         
   27 00000040 E1A06004        MOV              R6, R4      ;tempReg = val
   28 00000044         
   29 00000044 E0800005        ADD              R0, R0, R5  ;address = address 
                                                            + offset
   30 00000048 E2800004        ADD              R0, R0, #4  ;
   31 0000004C         
   32 0000004C E5806000        STR              R6, [R0]    ;storeVal
   33 00000050 E2422001        SUB              R2, R2, #1  ;fromIndex--
   34 00000054 EAFFFFF4        B                whLoopRightShift
   35 00000058         
   36 00000058         whLoopLeftShift
   37 00000058 E1520003        CMP              R2, R3      ;while(fromIndex <=
                                                             toIndex)
   38 0000005C 2A000008        BHS              moveVal
   39 00000060 E59F0034        LDR              R0, =array
   40 00000064 E2855004        ADD              R5, R5, #4  ;offset++
   41 00000068 E7904005        LDR              R4, [R0, R5] 
                                                            ;val = array[index]
                                                            
   42 0000006C         
   43 0000006C E1A06004        MOV              R6, R4      ;tempReg = val
   44 00000070         
   45 00000070 E0800005        ADD              R0, R0, R5  ;address = address 



ARM Macro Assembler    Page 2 


                                                            - offset
   46 00000074 E2400004        SUB              R0, R0, #4  ;address -= 4
   47 00000078         
   48 00000078 E5806000        STR              R6, [R0]    ;storeVal
   49 0000007C E2822001        ADD              R2, R2, #1  ;fromIndex++
   50 00000080 EAFFFFF4        B                whLoopLeftShift
   51 00000084         
   52 00000084         moveVal
   53 00000084 E59F0010        LDR              R0, = array
   54 00000088 E3A05004        LDR              R5, =4      ;offset = 4
   55 0000008C E0050593        MUL              R5, R3, R5  ;offset = offset * 
                                                            indexToMoveTo
   56 00000090 E0800005        ADD              R0, R0, R5  ;index + offset
   57 00000094 E5809000        STR              R9, [R0]    ;store valToMove
   58 00000098         
   59 00000098 EAFFFFFE 
                       stop    B                stop
   60 0000009C         
   61 0000009C         
   62 0000009C 00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             TestArray, DATA, READWRITE
   63 00000000         
   64 00000000 00000009 
                       N       equ              9
   65 00000000 00000007 
              00000002 
              00000005 
              00000009 
              00000001 
              00000003 
              00000002 
              00000003 
              00000004 array   DCD              7,2,5,9,1,3,2,3,4
   66 00000024         
   67 00000024                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
rraymove.d -o.\arraymove.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Inc
lude -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MI
CROLIB SETA 1" --predefine="__UVISION_VERSION SETA 521" --predefine="NO_CLOCK_S
ETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1" 
--predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\arraymove.lst
 ArrayMove.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ArrayMove 00000000

Symbol: ArrayMove
   Definitions
      At line 1 in file ArrayMove.s
   Uses
      None
Comment: ArrayMove unused
moveVal 00000084

Symbol: moveVal
   Definitions
      At line 52 in file ArrayMove.s
   Uses
      At line 22 in file ArrayMove.s
      At line 38 in file ArrayMove.s

start 00000000

Symbol: start
   Definitions
      At line 5 in file ArrayMove.s
   Uses
      At line 3 in file ArrayMove.s
Comment: start used once
stop 00000098

Symbol: stop
   Definitions
      At line 59 in file ArrayMove.s
   Uses
      At line 59 in file ArrayMove.s
Comment: stop used once
whLoopLeftShift 00000058

Symbol: whLoopLeftShift
   Definitions
      At line 36 in file ArrayMove.s
   Uses
      At line 18 in file ArrayMove.s
      At line 50 in file ArrayMove.s

whLoopRightShift 0000002C

Symbol: whLoopRightShift
   Definitions
      At line 20 in file ArrayMove.s
   Uses
      At line 34 in file ArrayMove.s
Comment: whLoopRightShift used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestArray 00000000

Symbol: TestArray
   Definitions
      At line 62 in file ArrayMove.s
   Uses
      None
Comment: TestArray unused
array 00000000

Symbol: array
   Definitions
      At line 65 in file ArrayMove.s
   Uses
      At line 6 in file ArrayMove.s
      At line 23 in file ArrayMove.s
      At line 39 in file ArrayMove.s
      At line 53 in file ArrayMove.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000009

Symbol: N
   Definitions
      At line 64 in file ArrayMove.s
   Uses
      At line 7 in file ArrayMove.s
Comment: N used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file ArrayMove.s
   Uses
      None
Comment: main unused
1 symbol
350 symbols in table
