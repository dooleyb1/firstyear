


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MatMul, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F00A4 
                       0       LDR              R0, =matR
    7 00000004 E59F10A4        LDR              R1, =matA
    8 00000008 E59F20A4        LDR              R2, =matB
    9 0000000C E3A03004        LDR              R3, =4      ; row_size
   10 00000010 E3A04000        LDR              R4, =0      ; i
   11 00000014 E3A05000        LDR              R5, =0      ; j
   12 00000018 E3A06000        LDR              R6, =0      ; r
   13 0000001C E3A07000        LDR              R7, =0      ; k
   14 00000020 E3A08000        LDR              R8, =0      ;  A[i,k]
   15 00000024 E3A09000        LDR              R9, =0      ;  B[k,j]
   16 00000028 E3A0A000        LDR              R10, =0     ;  A[i,k] * B[k,j]
   17 0000002C EA000003        B                forLoop1
   18 00000030         
   19 00000030         increaseFor1
   20 00000030 E2844001        ADD              R4, R4, #1
   21 00000034 EA000001        B                forLoop1
   22 00000038         
   23 00000038         increaseFor2
   24 00000038 E2855001        ADD              R5, R5, #1
   25 0000003C EA000002        B                forLoop2
   26 00000040         
   27 00000040         forLoop1
   28 00000040 E1540003        CMP              r4, r3      ; for(i = 0; i < N;
                                                             i++)
   29 00000044 0A000017        BEQ              stop
   30 00000048 E3A05000        LDR              R5, =0      ; j=0
   31 0000004C         
   32 0000004C         forLoop2
   33 0000004C E1550003        CMP              R5, r3      ; for(j = 0; j < N;
                                                             j++)
   34 00000050 0AFFFFF6        BEQ              increaseFor1
   35 00000054 E3A06000        LDR              R6, =0      ; r=0
   36 00000058 E3A07000        LDR              R7, =0      ; k=0
   37 0000005C         
   38 0000005C         forLoop3
   39 0000005C E1570003        CMP              R7, r3      ; for(k = 0; k < N;
                                                             k++)
   40 00000060 0A00000B        BEQ              endLoop3
   41 00000064         
   42 00000064 E3A0B000        LDR              R11, =0
   43 00000068 E00B0394        MUL              R11, R4, r3 ; index = row * row
                                                            _size
   44 0000006C E08BB007        ADD              R11, R11, R7 ; index = index + 
                                                            col  
   45 00000070 E791810B        LDR              R8, [R1, R11, LSL #2] ; A[i,k]
   46 00000074         
   47 00000074 E3A0B000        LDR              R11, =0     ; 
   48 00000078 E00B0397        MUL              R11, R7, r3 ; index = row * row
                                                            _size
   49 0000007C E08BB005        ADD              R11, R11, R5 ; index = index + 
                                                            column
   50 00000080 E792910B        LDR              R9, [R2, R11, LSL #2] ; B[k,j]
   51 00000084         



ARM Macro Assembler    Page 2 


   52 00000084 E00A0998        MUL              R10, R8, R9 ; A[i,k] * B[k,j]
   53 00000088 E086600A        ADD              R6, R6, R10 ; r = r + A[i,k] * 
                                                            B[k,j]
   54 0000008C E2877001        ADD              R7, R7, #1
   55 00000090 EAFFFFF1        B                forLoop3
   56 00000094         
   57 00000094         endLoop3
   58 00000094 E3A0B000        LDR              R11, =0
   59 00000098 E00B0394        MUL              R11, R4, R3
   60 0000009C E08BB005        ADD              R11, R11, R5
   61 000000A0 E780610B        STR              R6, [R0, R11, LSL #2] 
                                                            ; Store r in R[i,j]
                                                            
   62 000000A4 EAFFFFE3        B                increaseFor2
   63 000000A8         
   64 000000A8 EAFFFFFE 
                       stop    B                stop
   65 000000AC         
   66 000000AC         
   67 000000AC 00000000 
              00000000 
              00000000         AREA             TestArray, DATA, READWRITE
   68 00000000         
   69 00000000 00000004 
                       N       EQU              4
   70 00000000         
   71 00000000 00000005 
              00000004 
              00000003 
              00000002 matA    DCD              5,4,3,2
   72 00000010 00000003 
              00000004 
              00000003 
              00000004         DCD              3,4,3,4
   73 00000020 00000002 
              00000003 
              00000004 
              00000005         DCD              2,3,4,5
   74 00000030 00000004 
              00000003 
              00000004 
              00000003         DCD              4,3,4,3
   75 00000040         
   76 00000040 00000005 
              00000004 
              00000003 
              00000002 matB    DCD              5,4,3,2
   77 00000050 00000003 
              00000004 
              00000003 
              00000004         DCD              3,4,3,4
   78 00000060 00000002 
              00000003 
              00000004 
              00000005         DCD              2,3,4,5
   79 00000070 00000004 
              00000003 
              00000004 
              00000003         DCD              4,3,4,3



ARM Macro Assembler    Page 3 


   80 00000080         
   81 00000080 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       matR    SPACE            64
   82 000000C0         
   83 000000C0                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\m
atmul.d -o.\matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -
IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB
 SETA 1" --predefine="__UVISION_VERSION SETA 521" --predefine="NO_CLOCK_SETUP S
ETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1" --pred
efine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\matmul.lst MatMul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 00000000

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
MatMul 00000000

Symbol: MatMul
   Definitions
      At line 1 in file MatMul.s
   Uses
      None
Comment: MatMul unused
endLoop3 00000094

Symbol: endLoop3
   Definitions
      At line 57 in file MatMul.s
   Uses
      At line 40 in file MatMul.s
Comment: endLoop3 used once
forLoop1 00000040

Symbol: forLoop1
   Definitions
      At line 27 in file MatMul.s
   Uses
      At line 17 in file MatMul.s
      At line 21 in file MatMul.s

forLoop2 0000004C

Symbol: forLoop2
   Definitions
      At line 32 in file MatMul.s
   Uses
      At line 25 in file MatMul.s
Comment: forLoop2 used once
forLoop3 0000005C

Symbol: forLoop3
   Definitions
      At line 38 in file MatMul.s
   Uses
      At line 55 in file MatMul.s
Comment: forLoop3 used once
increaseFor1 00000030

Symbol: increaseFor1
   Definitions
      At line 19 in file MatMul.s
   Uses
      At line 34 in file MatMul.s
Comment: increaseFor1 used once
increaseFor2 00000038




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: increaseFor2
   Definitions
      At line 23 in file MatMul.s
   Uses
      At line 62 in file MatMul.s
Comment: increaseFor2 used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file MatMul.s
   Uses
      At line 3 in file MatMul.s
Comment: start used once
stop 000000A8

Symbol: stop
   Definitions
      At line 64 in file MatMul.s
   Uses
      At line 29 in file MatMul.s
      At line 64 in file MatMul.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestArray 00000000

Symbol: TestArray
   Definitions
      At line 67 in file MatMul.s
   Uses
      None
Comment: TestArray unused
matA 00000000

Symbol: matA
   Definitions
      At line 71 in file MatMul.s
   Uses
      At line 7 in file MatMul.s
Comment: matA used once
matB 00000040

Symbol: matB
   Definitions
      At line 76 in file MatMul.s
   Uses
      At line 8 in file MatMul.s
Comment: matB used once
matR 00000080

Symbol: matR
   Definitions
      At line 81 in file MatMul.s
   Uses
      At line 6 in file MatMul.s
Comment: matR used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 69 in file MatMul.s
   Uses
      None
Comment: N unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file MatMul.s
   Uses
      None
Comment: main unused
1 symbol
356 symbols in table
