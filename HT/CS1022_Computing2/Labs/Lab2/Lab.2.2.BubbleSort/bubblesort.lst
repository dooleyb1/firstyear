


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             BubbleSort, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F0060        LDR              R0, =array  ; address of array
    7 00000004 E59F5060        LDR              R5, =arrayN ; address of array 
                                                            size
    8 00000008 E5955000        LDR              R5, [R5]    ; N = load(array si
                                                            ze)
    9 0000000C         
   10 0000000C         whileLoop                            ;do
   11 0000000C         ;{
   12 0000000C E3A06000        LDR              R6, =0      ; swapped = false
   13 00000010 E3A02001        LDR              R2, =1      ; for(i = 1;
   14 00000014         forLoop
   15 00000014 E1520005        CMP              R2, R5      ; i < N)
   16 00000018 0A000008        BEQ              endForLoop  ;  {  
   17 0000001C E2421001        SUB              R1, R2, #1  ;   j = i-1
   18 00000020 E7909102        LDR              R9, [R0, R2, LSL #2] ;   load a
                                                            rray[i] into R9
   19 00000024 E790A101        LDR              R10, [R0, R1, LSL #2] ;   load 
                                                            array[j] into R10
   20 00000028 E15A0009        CMP              R10, R9     ;     if array[j] <
                                                            = array[i] dont swa
                                                            p
   21 0000002C 9A000001        BLS              dontSwap    ;
   22 00000030 EB000006        BL               swapSubroutine ;   else swap ar
                                                            ray[j] and array[i]
                                                            
   23 00000034 E3A06001        LDR              R6, =1      ;   boolean swapped
                                                             = true
   24 00000038         dontSwap                             ;
   25 00000038 E2822001        ADD              R2, R2, #1  ;   i++
   26 0000003C EAFFFFF4        B                forLoop     ; }
   27 00000040         endForLoop                           ;}
   28 00000040 E3560001        CMP              R6, #1      ; while(swapped)
   29 00000044 0AFFFFF0        BEQ              whileLoop
   30 00000048 EAFFFFFF        B                stop
   31 0000004C         
   32 0000004C         
   33 0000004C EAFFFFFE 
                       stop    B                stop
   34 00000050         
   35 00000050         
   36 00000050         ;swapSub subroutine
   37 00000050         ;Swaps two elements at index i and j in a 1-dimensional 
                       array of word-size integers
   38 00000050         ;
   39 00000050         ;Parameters:
   40 00000050         ;R0 = arrayStartAddress
   41 00000050         ;R1 = i (element index)
   42 00000050         ;R2 = j (element index)
   43 00000050         
   44 00000050         ;Returns;
   45 00000050         ;void
   46 00000050         
   47 00000050         swapSubroutine
   48 00000050 E92D40C0        STMFD            SP!, {R6-R7, LR}



ARM Macro Assembler    Page 2 


   49 00000054 E7906101        LDR              R6, [R0, R1, LSL #2] 
                                                            ;load(i, i index)
   50 00000058 E7907102        LDR              R7, [R0, R2, LSL #2] 
                                                            ;load(j, j index)
   51 0000005C E7806102        STR              R6, [R0, R2, LSL #2] 
                                                            ;store(i, j index) 
                                                            
   52 00000060 E7807101        STR              R7, [R0, R1, LSL #2] 
                                                            ;store(j, i index)
   53 00000064 E8BD80C0        LDMFD            SP!, {R6-R7, PC}
   54 00000068         
   55 00000068 00000000 
              00000000         AREA             TestArray, DATA, READWRITE
   56 00000000         
   57 00000000         ; Array Size
   58 00000000 0000000F 
                       arrayN  DCD              15
   59 00000004         
   60 00000004         ; Array Elements
   61 00000004 00000021 
              00000011 
              00000012 
              0000005C 
              00000031 
              0000001C 
              0000004E 
              0000004B 
              00000016 
              0000000D 
              00000013 
              0000000D 
              00000008 
              0000002C 
              00000023 array   DCD              33,17,18,92,49,28,78,75,22,13,1
9,13,8,44,35
   62 00000040         
   63 00000040                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\b
ubblesort.d -o.\bubblesort.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\I
nclude -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__
MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 521" --predefine="NO_CLOCK
_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1
" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\bubblesort.
lst BubbleSort.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BubbleSort 00000000

Symbol: BubbleSort
   Definitions
      At line 1 in file BubbleSort.s
   Uses
      None
Comment: BubbleSort unused
dontSwap 00000038

Symbol: dontSwap
   Definitions
      At line 24 in file BubbleSort.s
   Uses
      At line 21 in file BubbleSort.s
Comment: dontSwap used once
endForLoop 00000040

Symbol: endForLoop
   Definitions
      At line 27 in file BubbleSort.s
   Uses
      At line 16 in file BubbleSort.s
Comment: endForLoop used once
forLoop 00000014

Symbol: forLoop
   Definitions
      At line 14 in file BubbleSort.s
   Uses
      At line 26 in file BubbleSort.s
Comment: forLoop used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file BubbleSort.s
   Uses
      At line 3 in file BubbleSort.s
Comment: start used once
stop 0000004C

Symbol: stop
   Definitions
      At line 33 in file BubbleSort.s
   Uses
      At line 30 in file BubbleSort.s
      At line 33 in file BubbleSort.s

swapSubroutine 00000050

Symbol: swapSubroutine
   Definitions
      At line 47 in file BubbleSort.s
   Uses
      At line 22 in file BubbleSort.s
Comment: swapSubroutine used once
whileLoop 0000000C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: whileLoop
   Definitions
      At line 10 in file BubbleSort.s
   Uses
      At line 29 in file BubbleSort.s
Comment: whileLoop used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestArray 00000000

Symbol: TestArray
   Definitions
      At line 55 in file BubbleSort.s
   Uses
      None
Comment: TestArray unused
array 00000004

Symbol: array
   Definitions
      At line 61 in file BubbleSort.s
   Uses
      At line 6 in file BubbleSort.s
Comment: array used once
arrayN 00000000

Symbol: arrayN
   Definitions
      At line 58 in file BubbleSort.s
   Uses
      At line 7 in file BubbleSort.s
Comment: arrayN used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file BubbleSort.s
   Uses
      None
Comment: main unused
1 symbol
352 symbols in table
